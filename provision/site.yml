# Provision website
# Usage: source env.sh && ansible-playbook playbooks/backup_wordpress.yml -i hosts.ini -l staging

---
- hosts: "*:!loadbalancer"
  become: yes

  vars:
    siteurl: "{{ 'https://www.themastonline.com' if 'production' in group_names else 'https://staging.themastonline.com' }}"
  vars_files:
    - "./vars/production.yml"

  pre_tasks:
    - debug: msg="Configuring the following host - {{ ansible_host}}"

    - name: common dependencies
      apt: name={{ item }} state=latest
      with_items:
        - rsync
        - unzip

    - name: check if wordpress theme directory already exists
      stat:
        path: "{{ wordpress_installs[0].path }}/wp-content/themes/{{ wordpress_installs[0].themes[0].name }}"
      register: theme_dir
      
    - name: download & install theme if not there (local)
      include: tasks/wp_theme.yml
      when: not theme_dir.stat.exists
      
  post_tasks:
    - name: add SSL settings for reverse proxy
      blockinfile:
        dest: "{{ wordpress_installs[0].path }}/wp-config.php"
        insertbefore: "^// \\*\\* MySQL settings \\*\\* //"
        block: |
          define('FORCE_SSL_ADMIN', true);
          if (strpos($_SERVER['HTTP_X_FORWARDED_PROTO'], 'https') !== false)
          $_SERVER['HTTPS']='on';

    - name: import fixtures data
      include: tasks/import_fixtures.yml
      when: load_fixtures
      tags: wip

    - name: adjust siteurl appropriately
      command: wp-cli option --allow-root --no-color --path="{{wordpress_installs[0].path}}" update "siteurl" "{{siteurl}}"

    - name: adjust home appropriately
      command: wp-cli option --allow-root --no-color --path="{{wordpress_installs[0].path}}" update "home" "{{siteurl}}"
        
    - name: restart apache
      service: name=apache2 state=restarted
  roles:
    - role: database
      dbhost: "{{ wordpress_installs[0].dbhost}}"
      dbname: "{{ wordpress_installs[0].dbname }}"
      dbuser: "{{ wordpress_installs[0].dbuser }}"
      dbpass: "{{ wordpress_installs[0].dbpass }}"

    - role: webserver

    - role: tersmitten.wordpress
      notify: restart apache

    - role: wp_filters
      install_fail2ban: yes
      notify: restart apache
